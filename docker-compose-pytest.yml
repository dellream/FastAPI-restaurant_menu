version: '3.8'
services:
  db:
    image: postgres:15.1-alpine
    restart: always
    container_name: db
    ports:
      - "5432:5432"
    volumes:
      - pytest_postgres_data:/var/lib/postgresql/data/
    networks:
      - pytest_network
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DBNAME: ${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "$${POSTGRES_USER}", "-d", "$${POSTGRES_DBNAME}" ]
      interval: 5s
      timeout: 30s
      retries: 3

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    networks:
      - pytest_network
    volumes:
      - pytest_redis_data:/data
    expose:
      - "6379"
    ports:
      - "6379:6379"
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    networks:
      - pytest_network
    ports:
      - "8000:8000"
    entrypoint: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env

networks:
  pytest_network:
    name: pytest_network
volumes:
  pytest_postgres_data:
    name: pytest_postgres_data
  pytest_redis_data:
    name: pytest_redis_data
